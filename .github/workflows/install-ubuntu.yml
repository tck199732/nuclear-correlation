name: install

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  schedule:
    - cron: '0 0 * * *'
env:
  DATE: ""
  CACHE_NUMBER: 0  # increase to reset cache manually
  CTEST_OUTPUT_ON_FAILURE: 1

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/test
        
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
            miniforge-variant: Mambaforge
            miniforge-version: latest
            activate-environment: test
            use-mamba: true

      - name: Set cache date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - uses: actions/cache@v2
        with:
          path: ${{ matrix.prefix }}
          key: ${{ matrix.label }}-conda-${{ hashFiles('environment.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
        id: cache

      - name: Update environment
        run: mamba env update -n test -f environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: export-project-path
        shell: bash -el {0}
        run: |
            export PROJECT_DIR=$(pwd)
            echo $PROJECT_DIR
      
      - name: check
        shell: bash -el {0}
        run: |
            conda activate test
            root-config --version
            cmake --version 

      - name: build-cmake ðŸ”¨
        shell: bash -el {0}
        run: |
          conda activate test
          cmake -B build -S tests -DENABLE_TEST_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug
        
        # ~/.local/bin/ctest is called instead if ${CONDA_PREFIX}/ is later in ${PATH}
      - name: check-ctest
        shell: bash -el {0}
        run: | 
          conda activate test
          which ctest

      - name: build-tests
        shell: bash -el {0}
        run: |
          conda activate test
          cmake --build build -j4
        
      - name: run-tests
        shell: bash -el {0}
        run: |
          conda activate test
          export PROJECT_DIR=$(pwd)
          cd build
          ctest --build-config Debug
            
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}





